<h1>Benvenuto su Lato</h1>
<p class="lead">Questa è la homepage dell'applicazione. Una <b>breve guida su come personalizzare</b> un nuovo progetto.</p>

<h2>Come iniziare</h2>
<p>
Per creare delle pagine custom di presentazione del progetto puoi modificare l' <code>ApplicationController</code> estendendo la classe <code>Lato::ApplicationController</code> e specificando di utilizzare il layout di Lato:
</p>

<pre>
class ApplicationController < Lato::ApplicationController
  layout 'lato/application'

  def index; end
end
</pre>

<p>
<%= link_to 'Source code: Esempio', 'https://github.com/lato-org/lato/blob/main/test/dummy/app/controllers/application_controller.rb', target: '_blank' %><br>
<%= link_to 'Source code: Lato::ApplicationController', 'https://github.com/lato-org/lato/blob/main/app/controllers/lato/application_controller.rb', target: '_blank' %>
</p>

<h2>Come nascondere la sidebar</h2>
<p>
Per nascondere la sidebar puoi utilizzare utilizzare uno dei metodi messi a disposizione dal concern <code>Lato::Layoutable</code> (già importato da <code>Lato::ApplicationController</code>):
</p>

<pre>
class ApplicationController < Lato::ApplicationController
  layout 'lato/application'

  def index
    hide_sidebar
  end
end
</pre>

<p>
Per applicare la regola su tutte le action del controller puoi utilizzare rapidamente il <code>before_action</code>:
</p>

<pre>
class ApplicationController < Lato::ApplicationController
  layout 'lato/application'
  before_action :hide_sidebar

  def index; end

  def other_action; end
end
</pre>

<p>
<%= link_to 'Source code Lato::Layoutable', 'https://github.com/lato-org/lato/blob/main/app/controllers/concerns/lato/layoutable.rb', target: '_blank' %>
</p>

<h2>Come utilizzare del CSS custom e personalizzare Bootstrap</h2>

<p>
Per personalizzare il CSS di Lato puoi modificare il file <code>application.scss</code> dell'applicazione principale:
</p>

<pre>
@import url('https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&display=swap');

// Override bootstrap variables
$font-family-base: 'Lato' !default;
$primary: #03256C;

// Import lato css
@import 'lato/application';

// Add custom css
pre {
  border-radius: 15px;
}
</pre>

<p>
<%= link_to 'Source code: Esempio', 'https://github.com/lato-org/lato/blob/main/test/dummy/app/assets/stylesheets/application.scss', target: '_blank' %><br>
<%= link_to 'Source code: Variabili SCSS Bootstrap', 'https://github.com/twbs/bootstrap/blob/main/scss/_variables.scss', target: '_blank' %>
</p>

<h2>Come utilizzare dei controller di Stimulus JS custom</h2>

<p>
Stimulus JS è una dipendenza di Lato e può essere utilizzata normalmente senza integrazioni specifiche.<br>
Di seguito trovi un esempio di utilizzo di un controller custom <code>hello_controller.js</code> e di un controller di lato <code>lato_hello_controller.js</code>:

<div data-controller="hello" class="text-success"></div>

<div data-controller="lato-hello" class="text-info"></div>

<div class="alert alert-info mt-3">
  <h4 class="alert-heading">Note</h4>
  <p>
  Tutti i controller gestiti da Lato hanno, per definizione, il nome <code>lato_nome_controller.js</code>.<br>
  Esempio: <code>lato_hello_controller.js</code> viene utilizzato con l'attributo <code>data-controller="lato_hello"</code>.
  </p>
</div>

<div class="mt-5 mb-5 d-flex justify-content-between">
<span></span>
<%= link_to 'Accedi per altri esempi', lato.authentication_signin_path, class: 'btn btn-primary btn-lg' %>
</div>