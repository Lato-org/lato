<%= lato_page_head 'Tutorial', [
  { label: 'Tutorial' }
] do %>
  <p class="lead llm-ignore">ðŸ‘‹ <%= @session.user.first_name %>, welcome to the Lato tutorial!</p>
<% end %>

<% if params[:generate_docs] %>
<div class="alert alert-info mt-3 llm-ignore">
<p>
These pages were generated by downloading the rendered HTML templates from Lato's dummy app.<br>
<b>Some features might not be available</b>. To use the full documentation, you need to run the gem locally using the following commands:
</p>
<pre>
$ git clone https://github.com/lato-org/lato
$ cd lato
$ bundle
$ rails db:migrate
$ rails db:seed
$ foreman start -f Procfile.dev
</pre>
</div>
<% end %>

<h2>Getting Started</h2>
<p>
To create custom presentation pages for your project, you can modify the <code>ApplicationController</code> by extending the <code>Lato::ApplicationController</code> class and specifying the use of Lato's layout:
</p>

<pre class="language-ruby">
class ApplicationController < Lato::ApplicationController
  layout 'lato/application'

  def index; end
end
</pre>

<p>
<%= link_to 'Source code: Example', 'https://github.com/lato-org/lato/blob/main/test/dummy/app/controllers/application_controller.rb', target: '_blank', class: "llm-ignore" %><br>
<%= link_to 'Source code: Lato::ApplicationController', 'https://github.com/lato-org/lato/blob/main/app/controllers/lato/application_controller.rb', target: '_blank', class: "llm-ignore" %>
</p>

<h2>How to Hide the Sidebar</h2>
<p>
To hide the sidebar, you can use one of the methods provided by the <code>Lato::Layoutable</code> concern (already included via <code>Lato::ApplicationController</code>):
</p>

<pre>
class ApplicationController < Lato::ApplicationController
  layout 'lato/application'

  def index
    hide_sidebar
  end
end
</pre>

<p>
To apply this rule to all controller actions, you can quickly use <code>before_action</code>:
</p>

<pre>
class ApplicationController < Lato::ApplicationController
  layout 'lato/application'
  before_action :hide_sidebar

  def index; end

  def other_action; end
end
</pre>

<p>
<%= link_to 'Source code: Lato::Layoutable', 'https://github.com/lato-org/lato/blob/main/app/controllers/concerns/lato/layoutable.rb', target: '_blank', class: "llm-ignore" %>
</p>

<h2>How to Use Custom CSS and Customize Bootstrap</h2>

<p>
To customize Lato's CSS, you can modify your main application's <code>application.scss</code> file:
</p>

<pre>
@import url('https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&display=swap');

// Override bootstrap variables
$font-family-base: 'Lato' !default;
$primary: #03256C;

// Import Lato CSS
@import 'lato/application';

// Add custom CSS
pre {
  border-radius: 15px;
}
</pre>

<p>
<%= link_to 'Source code: Example', 'https://github.com/lato-org/lato/blob/main/test/dummy/app/assets/stylesheets/application.scss', target: '_blank', class: 'llm-ignore' %><br>
<%= link_to 'Source code: Bootstrap SCSS Variables', 'https://github.com/twbs/bootstrap/blob/main/scss/_variables.scss', target: '_blank', class: 'llm-ignore' %>
</p>

<h2>How to Use Custom Stimulus JS Controllers</h2>

<p>
Stimulus JS is a dependency of Lato and can be used normally without specific integrations.<br>
<span class="llm-ignore">Below is an example of using a custom controller <code>hello_controller.js</code> and a Lato controller <code>lato_hello_controller.js</code>:</span>

<div data-controller="hello" class="text-success"></div>

<div data-controller="lato-hello" class="text-info"></div>

<div class="alert alert-info mt-3">
  <h4 class="alert-heading">Notes</h4>
  <p>
  All controllers handled by Lato are named, by definition, <code>lato_name_controller.js</code>.<br>
  Example: <code>lato_hello_controller.js</code> is used with the attribute <code>data-controller="lato-hello"</code>.
  </p>
</div>


<h2>How to Protect a Page</h2>

<p>
To authenticate a page and prevent public access by unauthenticated users, you can use one of the methods provided by the <code>Lato::Sessionable</code> concern (already included via <code>Lato::ApplicationController</code>):
</p>

<pre>
class TutorialController < ApplicationController
  def index
    return unless authenticate_session
  end
end
</pre>

<p>
To apply the rule to all actions in the controller, you can simply use <code>before_action</code>:
</p>

<pre>
class TutorialController < ApplicationController
  before_action :authenticate_session

  def index; end
end
</pre>

<div class="alert alert-info mt-3">
  <h4 class="alert-heading">Notes</h4>
  <p>
  Just like <code>authenticate_session</code>, you can also use its opposite <code>not_authenticate_session</code> to hide a page from authenticated users.<br>
  Example:
  </p>
<pre>
class AuthenticationController < ApplicationController
  before_action :not_authenticate_session, only: %i[signin]
  before_action :authenticate_session, only: %i[signout]

  def signin; end

  def signout; end
end
</pre>
</div>

<h3>Limiting the Number of Requests</h3>

<p>
To limit the number of requests to a page, you can use the <code>limit_request</code> method:
</p>

<pre>
class TutorialController < ApplicationController
  before_action :authenticate_session
  before_action :limit_request, only: %i[index]

  def index; end
end
</pre>

<p>
The <code>limit_request</code> method accepts two parameters: <code>limit</code> (default: 10) and <code>time_window</code> (default: 10.minutes).<br>
These parameters define the maximum number of requests a user can make within a given time window.
</p>

<p>
<%= link_to 'Source code: Lato::Sessionable', 'https://github.com/lato-org/lato/blob/main/app/controllers/concerns/lato/sessionable.rb', target: '_blank', class: 'llm-ignore' %>
</p>

<h2>Accessing the Logged-in User</h2>

<p>
The user currently logged into Lato is always accessible in all controllers and views through the <code>@session</code> instance of the <code>Lato::Session</code> model:
</p>

<pre>
class TutorialController < ApplicationController
  # ...

  def index
    @user_id = @session.user_id
    @user = @session.user.first_name
  end

  # ...
end
</pre>

<div class="alert alert-info mt-3">
  <h4 class="alert-heading">Notes</h4>
  <p>
  Using <code>@session.user_id</code> instead of <code>@session.user.id</code> avoids triggering a query on the users table, improving performance!
  </p>
  <p>
  <code>@session.valid?</code> lets you check whether the user is logged in or not.
  </p>
</div>

<p>
<%= link_to 'Source code: Lato::Session', 'https://github.com/lato-org/lato/blob/main/app/models/lato/session.rb', target: '_blank', class: 'llm-ignore' %>
</p>
