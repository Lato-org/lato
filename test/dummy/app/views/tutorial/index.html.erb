<%= lato_page_head 'Tutorial', [
  { label: 'Tutorial' }
] do %>
  <p class="lead llm-ignore">ðŸ‘‹ <%= @session.user.first_name %>, welcome to the Lato tutorial!</p>
<% end %>

<h2>How to Protect a Page</h2>

<p>
To authenticate a page and prevent public access by unauthenticated users, you can use one of the methods provided by the <code>Lato::Sessionable</code> concern (already included via <code>Lato::ApplicationController</code>):
</p>

<pre>
class TutorialController < ApplicationController
  def index
    return unless authenticate_session
  end
end
</pre>

<p>
To apply the rule to all actions in the controller, you can simply use <code>before_action</code>:
</p>

<pre>
class TutorialController < ApplicationController
  before_action :authenticate_session

  def index; end
end
</pre>

<div class="alert alert-info mt-3">
  <h4 class="alert-heading">Notes</h4>
  <p>
  Just like <code>authenticate_session</code>, you can also use its opposite <code>not_authenticate_session</code> to hide a page from authenticated users.<br>
  Example:
  </p>
<pre>
class AuthenticationController < ApplicationController
  before_action :not_authenticate_session, only: %i[signin]
  before_action :authenticate_session, only: %i[signout]

  def signin; end

  def signout; end
end
</pre>
</div>

<h3>Limiting the Number of Requests</h3>

<p>
To limit the number of requests to a page, you can use the <code>limit_request</code> method:
</p>

<pre>
class TutorialController < ApplicationController
  before_action :authenticate_session
  before_action :limit_request, only: %i[index]

  def index; end
end
</pre>

<p>
The <code>limit_request</code> method accepts two parameters: <code>limit</code> (default: 10) and <code>time_window</code> (default: 10.minutes).<br>
These parameters define the maximum number of requests a user can make within a given time window.
</p>

<p>
<%= link_to 'Source code: Lato::Sessionable', 'https://github.com/lato-org/lato/blob/main/app/controllers/concerns/lato/sessionable.rb', target: '_blank', class: 'llm-ignore' %>
</p>

<h2>Accessing the Logged-in User</h2>

<p>
The user currently logged into Lato is always accessible in all controllers and views through the <code>@session</code> instance of the <code>Lato::Session</code> model:
</p>

<pre>
class TutorialController < ApplicationController
  # ...

  def index
    @user_id = @session.user_id
    @user = @session.user.first_name
  end

  # ...
end
</pre>

<div class="alert alert-info mt-3">
  <h4 class="alert-heading">Notes</h4>
  <p>
  Using <code>@session.user_id</code> instead of <code>@session.user.id</code> avoids triggering a query on the users table, improving performance!
  </p>
  <p>
  <code>@session.valid?</code> lets you check whether the user is logged in or not.
  </p>
</div>

<p>
<%= link_to 'Source code: Lato::Session', 'https://github.com/lato-org/lato/blob/main/app/models/lato/session.rb', target: '_blank', class: 'llm-ignore' %>
</p>
